{"version":3,"sources":["webpack:///./task-03.js"],"names":["makeTransaction","transaction","Promise","resolve","reject","min","max","delay","Math","floor","random","setTimeout","id","time","logSuccess","_ref","console","log","logError","warn","amount","then","catch"],"mappings":"0HAkBMA,EAAkB,SAAAC,GACtB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IApB+BC,EAAKC,EAoB9BC,GApByBF,EAoBS,IApBJC,EAoBS,IAnBxCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAqBlDM,WAAW,WACUH,KAAKE,SAAW,GAGjCP,EAAQ,CAACS,GAAIX,EAAYW,GAAIC,KAAMN,IAEnCH,EAAOH,EAAYW,KAEpBL,MAIDO,EAAa,SAAAC,GAAgB,IAAdH,EAAcG,EAAdH,GAAIC,EAAUE,EAAVF,KACvBG,QAAQC,IAAR,eAA2BL,EAA3B,iBAA8CC,EAA9C,OAGIK,EAAW,SAAAN,GACfI,QAAQG,KAAR,gCAA6CP,EAA7C,8BAaFZ,EAAgB,CAAEY,GAAI,GAAIQ,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETlB,EAAgB,CAAEY,GAAI,GAAIQ,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ,GAETlB,EAAgB,CAAEY,GAAI,GAAIQ,OAAQ,KAC/BC,KAAKP,GACLQ,MAAMJ,GAETlB,EAAgB,CAAEY,GAAI,GAAIQ,OAAQ,MAC/BC,KAAKP,GACLQ,MAAMJ","file":"task03.902fcc31cd894e619701.js","sourcesContent":["const randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\n// const makeTransactionOLD = (transaction, onSuccess, onError) => {\r\n//   const delay = randomIntegerFromInterval(200, 500);\r\n\r\n//   setTimeout(() => {\r\n//     const canProcess = Math.random() > 0.3;\r\n\r\n//     if (canProcess) {\r\n//       onSuccess(transaction.id, delay);\r\n//     } else {\r\n//       onError(transaction.id);\r\n//     }\r\n//   }, delay);\r\n// };\r\n\r\nconst makeTransaction = transaction => {\r\n  return new Promise((resolve, reject) => {\r\n    const delay = randomIntegerFromInterval(200, 500);\r\n\r\n    setTimeout(() => {\r\n      const canProcess = Math.random() > 0.3;\r\n\r\n      if (canProcess) {\r\n        resolve({id: transaction.id, time: delay});\r\n      } else {\r\n        reject(transaction.id);\r\n      }\r\n    }, delay);\r\n  });\r\n};\r\n\r\nconst logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n// makeTransactionOLD({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransactionOLD({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransactionOLD({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransactionOLD({ id: 73, amount: 100 }, logSuccess, logError);\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n"],"sourceRoot":""}